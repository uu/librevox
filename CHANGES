= 0.7 / 2014-01-15

  * Update EventMachine to 1.0
  
  * Inbound event listener automatically tries to reconnect if connection
    is lost.

  * Sending `SIGHUP` reopens log file. Useful in combination with logrotate(1).

  * Remove `VERSION` constant.

= 0.6 / 2013-01-21

  * Less strict EventMachine dependency [Phil Pirozhkov <pirjsuka@gmail.com>]
  
  * Parse body from command reply:
      
      response.content[:body]

    [Phil Pirozhkov <pirjsuka@gmail.com>]

= 0.5 / 2012-06-27

  * Allow setting a response's content from a hash:
      
      response = Librevox::Response.new
      response.content = {:key => 'value'}

    [Ben Langfeld]

  * Removing fibers and reintroducing callback passing style:
        
      def session_initiated
        answer do
          play_and_get_digits 'some-file.mp3' do |digit|
            ...
          end
        end
      end

    Fibers have proven to be hard to understand and prune to intro-
    ducing subtle bugs, whereas callback passing style is easier to
    manage.

= 0.3 / 2010-09-30

  * New commands: uuid_bridge, uuid_park, hash.

  * New applications: respond.

  * Trap INT / TERM and terminate gracefully.

  * You now have to do `api.status` instead of `api :status` when using
    commands from a listener â€“ this is easier on the eye, and makes for
    a slighly simpler implementation.

  * Introduced fibers, making Librevox Ruby 1.9-only. Support for the
    old callback-style has been removed. This would have worked in < 0.3:
    
      def session_initiated
        answer
        play_and_get_digits 'some-file.mp3' do |digit|
          ...
        end
      end

    Now you can write your code in a seemingly blocking manner:

      def session_initiated
        answer
        digit = play_and_get_digits 'some-file.mp3'
        ...
      end

  * Use `Listener::Outbound#variable(name)` to access channel variables.
    E.g. `variable("foo")` is a shortcut for `session["variable_foo"]`.

  * `Applications#play_and_get_digits/#read` uses the parameter key
    `:variable` to determine which channel variable to read the result
    from. Before it was `:read_var`.

  * Applications automatically calls `update_session`, which means that
    `Outbound#session` always will be up to date. Before you had to call
    it explicitly.

= 0.2.1 / 2010-02-09

  * Listener::Outbound#update_session takes a callback like other functions.

  * Fix minor bug in parsing order: api/response comes before events.

= 0.2 / 2010-01-26

  * Use #session_initiated instead of #session.

  * bridge() takes an optional hash with channel variables.

  * bridge() takes an array of arrays as endpoints, each set being failover.

  * New applications: unbind_meta_app, pre_answer, export, gentones, deflect,
    redirect, unset.

  * Add logger: Librevox.logger

  * Listener::Base#done is an alias of
    EventMachine::Connection#close_connection_after_writing

  * Listener::Base#on_event is called with a duplicate of Base#response as
    argument.

  * Event hooks are passed a duplicate of Base#response.

= 0.1.1 / 2010-01-05

  * Released to fix Gemcutter weirdness.

= 0.1 / 2009-12-18

  * Initial development release.
